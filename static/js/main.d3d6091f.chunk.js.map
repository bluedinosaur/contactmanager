{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/Footer.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducerC","state","action","type","contacts","filter","contact","id","payload","map","ProviderC","dispatchC","setState","axios","get","res","this","data","Provider","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","age","country","region","className","icon","faSortDown","onClick","style","cursor","faTimes","color","float","bind","to","faUserEdit","Contacts","Fragment","key","Header","branding","href","faHome","faUserPlus","faInfoCircle","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","onSubmit","e","preventDefault","newContact","post","history","push","target","val","priorityOptions","selectCountry","labelType","valueType","selectRegion","About","NotFound","Test","title","body","fetch","then","response","json","dataC","EditContact","updContact","match","params","put","App","exact","path","component","Footer","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.d3d6091f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducerC = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [...state.contacts, action.payload],\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class ProviderC extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatchC: (action) => this.setState((state) => reducerC(state, action)),\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faSortDown,\r\n  faTimes,\r\n  faUserEdit,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false,\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatchC) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatchC({ type: \"DELETE_CONTACT\", payload: id });\r\n    } catch (e) {\r\n      dispatchC({ type: \"DELETE_CONTACT\", payload: id });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone, age, country, region } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatchC } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <FontAwesomeIcon\r\n                  icon={faSortDown}\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo,\r\n                    })\r\n                  }\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <FontAwesomeIcon\r\n                  icon={faTimes}\r\n                  style={{ cursor: \"pointer\", color: \"red\", float: \"right\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatchC)}\r\n                />{\" \"}\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <FontAwesomeIcon\r\n                    icon={faUserEdit}\r\n                    style={{ cursor: \"pointer\", color: \"grey\", float: \"right\" }}\r\n                    className=\"mr-2\"\r\n                    onClick={this.onDeleteClick.bind(this, id, dispatchC)}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                  <li className=\"list-group-item\">Age: {age}</li>\r\n                  <li className=\"list-group-item\">Country: {country}</li>\r\n                  <li className=\"list-group-item\">Region: {region}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: propTypes.object.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n\r\n// const Contact = (props) => {\r\n//   return (\r\n//     <div>\r\n//       <h4>{props.name}</h4>\r\n//       <ul>\r\n//         <li>Email: {props.email}</li>\r\n//         <li>Phone: {props.phone}</li>\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n//to destructure...\r\n\r\n// const Contact = (props) => {\r\n//   const { name, email, phone } = props;\r\n\r\n//   return (\r\n//     <div>\r\n//       <h4>{name}</h4>\r\n//       <ul>\r\n//         <li>Email: {email}</li>\r\n//         <li>Phone: {phone}</li>\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// class Contact extends Component {\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <h4>{this.props.name}</h4>\r\n//         <ul>\r\n//           <li>Email: {this.props.email}</li>\r\n//           <li>Phone: {this.props.phone}</li>\r\n//         </ul>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n//to destructure...\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map((contact) => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faHome,\r\n  faUserPlus,\r\n  faInfoCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Header = (props) => {\r\n  const { branding } = props;\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <FontAwesomeIcon className=\"mr-1\" icon={faHome} />\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <FontAwesomeIcon className=\"mr-1\" icon={faUserPlus} />\r\n                Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <FontAwesomeIcon className=\"mr-1\" icon={faInfoCircle} />\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\",\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: propTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-em navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <div></div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\",\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: propTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error,\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: propTypes.string.isRequired,\r\n  name: propTypes.string.isRequired,\r\n  value: propTypes.string.isRequired,\r\n  placeholder: propTypes.string.isRequired,\r\n  type: propTypes.string.isRequired,\r\n  onChange: propTypes.func.isRequired,\r\n  error: propTypes.string,\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\",\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport { CountryDropdown, RegionDropdown } from \"react-country-region-selector\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    age: \"\",\r\n    country: \"\",\r\n    region: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  onSubmit = async (dispatchC, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone, age, country, region } = this.state;\r\n\r\n    //check for erros\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n      age,\r\n      country,\r\n      region,\r\n    };\r\n\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    dispatchC({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    //clear state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      age: \"\",\r\n      country: \"\",\r\n      region: \"\",\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  selectCountry(val) {\r\n    this.setState({ country: val });\r\n  }\r\n\r\n  selectRegion(val) {\r\n    this.setState({ region: val });\r\n  }\r\n\r\n  render() {\r\n    const { name, email, phone, age, country, region, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatchC } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatchC)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone Number\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Age\"\r\n                    name=\"age\"\r\n                    placeholder=\"Enter Age\"\r\n                    value={age}\r\n                    onChange={this.onChange}\r\n                  />\r\n\r\n                  <div>\r\n                    <CountryDropdown\r\n                      className=\"input-group mb-3\"\r\n                      priorityOptions={[\"AU\", \"NZ\"]}\r\n                      name=\"country\"\r\n                      value={country}\r\n                      onChange={(val) => this.selectCountry(val)}\r\n                    />\r\n                    <RegionDropdown\r\n                      className=\"input-group mb-3\"\r\n                      labelType=\"short\"\r\n                      valueType=\"short\"\r\n                      name=\"region\"\r\n                      country={country}\r\n                      value={region}\r\n                      onChange={(val) => this.selectRegion(val)}\r\n                    />\r\n                  </div>\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About</h1>\r\n      <p className=\"lead\">Simple App to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found Faggot!\r\n      </h1>\r\n      <p className=\"lead\">Page does not exist idiot</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\r\n      .then((response) => response.json())\r\n      .then((dataC) =>\r\n        this.setState({\r\n          title: dataC.title,\r\n          body: dataC.body,\r\n        })\r\n      );\r\n  }\r\n  //   UNSAFE_componentWillMount() {\r\n  //     console.log(\"componentWillMount...\");\r\n  //   }\r\n  //   componentDidUpdate() {\r\n  //     console.log(\"componentDidUpdate...\");\r\n  //   }\r\n  //   componentWillReceiveProps(nextProps, nextState) {\r\n  //     console.log(\"componentWillReceiveProps...\");\r\n  //   }\r\n\r\n  //   static getDerivedStateFromProps(nextProps, prevState) {\r\n  //     return null;\r\n  //   }\r\n\r\n  render() {\r\n    const { title } = this.state;\r\n    return (\r\n      <div>\r\n        <h1> {title} </h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport { CountryDropdown, RegionDropdown } from \"react-country-region-selector\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    age: \"\",\r\n    country: \"\",\r\n    region: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone,\r\n      age: contact.age,\r\n      country: contact.country,\r\n      region: contact.region,\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatchC, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    //check for erros\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n    dispatchC({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    //clear state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      age: \"\",\r\n      country: \"\",\r\n      region: \"\",\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  selectCountry(val) {\r\n    this.setState({ country: val });\r\n  }\r\n\r\n  selectRegion(val) {\r\n    this.setState({ region: val });\r\n  }\r\n\r\n  render() {\r\n    const { name, email, phone, age, country, region, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatchC } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatchC)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone Number\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Age\"\r\n                    name=\"age\"\r\n                    placeholder=\"Enter Age\"\r\n                    value={age}\r\n                    onChange={this.onChange}\r\n                  />\r\n\r\n                  <div>\r\n                    <CountryDropdown\r\n                      className=\"input-group mb-3\"\r\n                      priorityOptions={[\"AU\", \"NZ\"]}\r\n                      name=\"country\"\r\n                      value={country}\r\n                      onChange={(val) => this.selectCountry(val)}\r\n                    />\r\n                    <RegionDropdown\r\n                      className=\"input-group mb-3\"\r\n                      labelType=\"short\"\r\n                      valueType=\"short\"\r\n                      name=\"region\"\r\n                      country={country}\r\n                      value={region}\r\n                      onChange={(val) => this.selectRegion(val)}\r\n                    />\r\n                  </div>\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Edit Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport Footer from \"./components/layout/Footer\";\nimport { ProviderC } from \"./context\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nfunction App() {\n  return (\n    <ProviderC>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts}></Route>\n              <Route exact path=\"/contact/add\" component={AddContact}></Route>\n              <Route\n                exact\n                path=\"/contact/edit/:id\"\n                component={EditContact}\n              ></Route>\n              <Route exact path=\"/about\" component={About}></Route>\n              <Route exact path=\"/test\" component={Test}></Route>\n              <Route component={NotFound}></Route>\n            </Switch>\n          </div>\n          <Footer branding=\"Contact Manager\" />\n        </div>\n      </Router>\n    </ProviderC>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}